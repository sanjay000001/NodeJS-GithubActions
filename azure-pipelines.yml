trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

pool:
  name: Default  # Your self-hosted agent pool

jobs:
- job: Railsfe
  timeoutInMinutes: 30
  steps:
    - checkout: self

    # Updated to use Node.js 16 for compatibility with Jest 29.x
    - script: |
        # Check the directory 
        pwd
        
        # Change the node version to 16.x (compatible with Jest 29.x)
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        
        # Use Node.js 16.x instead of 12.18.3 for Jest compatibility
        nvm use 16 || nvm install 16
        
        # Set Node.js max heap size to 8GB (as per your workflow)
        export NODE_OPTIONS="--max-old-space-size=8192"
        
        # Verify setup
        echo "Current directory: $(pwd)"
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Yarn version: $(yarn --version)"
        echo "NODE_OPTIONS: $NODE_OPTIONS"
        
      displayName: 'Setup Node.js 16 (Jest Compatible)'

    - script: |
        # Source NVM and set environment
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        export NODE_OPTIONS="--max-old-space-size=8192"
        
        # Use Node.js 16
        nvm use 16
        
        # Clean install (remove package-lock.json warning)
        rm -f package-lock.json
        
        # Install dependencies with yarn
        yarn install
        
      displayName: 'Install Dependencies with Yarn (Clean)'

    - script: |
        # Source NVM and set environment
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        export NODE_OPTIONS="--max-old-space-size=8192"
        
        # Use Node.js 16
        nvm use 16
        
        # Run tests
        yarn test || npm test
        
      displayName: 'Run Tests'

    - script: |
        # Source NVM and set environment
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        export NODE_OPTIONS="--max-old-space-size=8192"
        
        # Use Node.js 16
        nvm use 16
        
        # Start dev server in background
        yarn run dev &
        DEV_SERVER_PID=$!
        
        # Wait a bit for server to start
        sleep 10
        
        # Check if server is running
        if ps -p $DEV_SERVER_PID > /dev/null; then
          echo "Development server started successfully (PID: $DEV_SERVER_PID)"
          # Optional: Test server endpoint
          curl -f http://localhost:3000 || echo "Server not responding on port 3000"
        else
          echo "Development server failed to start"
        fi
        
        # Stop the dev server
        kill $DEV_SERVER_PID || true
        wait $DEV_SERVER_PID 2>/dev/null || true
        
      displayName: 'Start and Test Dev Server'
